---
- name: Deploy backhaul Docker container
  hosts: all
  become: true # Run with elevated privileges if needed for Docker

  vars:
    backhaul_transport: tcp
    backhaul_mode: server

  tasks:
    - name: Pull the backhaul_tunnel image
      community.docker.docker_image:
        name: ghcr.io/mahdishariatzade/backhaul_tunnel:latest
        source: pull
      tags: pull_image

    - name: Ensure directory for backhaul
      file:
        path: /srv/backhaul
        state: directory
        mode: '0755'
      tags: ensure_directory

    - name: Render config.toml from template
      template:
        src: templates/{{ backhaul_transport }}_{{ backhaul_mode }}.j2
        dest: /srv/backhaul/config.toml
      tags: render_config

    - name: Generate self-signed SSL certificate
      shell: |
        openssl req -x509 -newkey rsa:2048 -keyout /srv/backhaul/key.pem -out /srv/backhaul/cert.pem -days 365 -nodes -subj "/CN=localhost"
      args:
        creates: /srv/backhaul/cert.pem
      when: backhaul_mode == 'server' and backhaul_transport in ['wss', 'wssmux']
      tags: generate_ssl

    - name: Run the backhaul container
      community.docker.docker_container:
        name: backhaul
        image: ghcr.io/mahdishariatzade/backhaul_tunnel:latest
        state: started
        restart_policy: unless-stopped
        volumes:
          - /srv/backhaul/config.toml:/app/config.toml:ro
          - /srv/backhaul/cert.pem:/root/server.crt:ro
          - /srv/backhaul/key.pem:/root/server.key:ro
      when: backhaul_mode == 'server' and backhaul_transport in ['wss', 'wssmux']
      tags: run_container_ssl

    - name: Run the backhaul container (without certs)
      community.docker.docker_container:
        name: backhaul
        image: ghcr.io/mahdishariatzade/backhaul_tunnel:latest
        state: started
        restart_policy: unless-stopped
        volumes:
          - /srv/backhaul/config.toml:/app/config.toml:ro
      when: not (backhaul_mode == 'server' and backhaul_transport in ['wss', 'wssmux'])
      tags: run_container
